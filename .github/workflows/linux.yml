name: Run Tests on Linux
on:
  push: {}
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
        unityVersion:
          - 2021.3.33f1
    steps:
      - name: Install UnityEditor
        run: |
          sudo docker cp $(docker create --rm unityci/editor:${{ matrix.unityVersion }}-base-3):/opt/unity /opt/unity
          sudo chown -R $(id -u):$(id -g) /opt/unity

          echo -e '#!/bin/bash\nxvfb-run -ae /dev/stdout /opt/unity/Editor/Unity -batchmode "$@"' | sudo tee -a /usr/bin/unity-editor
          sudo chmod +x /usr/bin/unity-editor

      - name: Generate a license activation file
        run: |
          unity-editor -quit -createManualActivationFile -logFile || true
      - name: Request a Unity license file
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_TOTP_KEY: ${{ secrets.UNITY_TOTP_KEY }}
        run: |
          npm install -g unity-verify-code
          git clone https://github.com/homuler/unity-license-activate.git
          cd unity-license-activate
          npm install
          cd ..
          npm install -g ./unity-license-activate
          unity-license-activate "$UNITY_EMAIL" "$UNITY_PASSWORD" Unity_v${{ matrix.unityVersion }}.alf --authenticator-key "$UNITY_TOTP_KEY"
      - name: Upload artifact even on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: png
          path: error.png
      - name: Upload artifact even on failure
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ulf
          path: Unity_*.ulf
      - name: Activate License And Cat
        if: success()
        run: |
          unity-editor -quit -batchmode -nographics -logFile -manualLicenseFile $(ls Unity_*.ulf) || true
          pwd
          ls ~/.local/share/unity3d/Unity/
          ls ~/.cache
